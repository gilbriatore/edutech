package com.edutech.domain;

import static com.edutech.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class AulaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAulaAllPropertiesEquals(Aula expected, Aula actual) {
        assertAulaAutoGeneratedPropertiesEquals(expected, actual);
        assertAulaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAulaAllUpdatablePropertiesEquals(Aula expected, Aula actual) {
        assertAulaUpdatableFieldsEquals(expected, actual);
        assertAulaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAulaAutoGeneratedPropertiesEquals(Aula expected, Aula actual) {
        assertThat(actual)
            .as("Verify Aula auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAulaUpdatableFieldsEquals(Aula expected, Aula actual) {
        assertThat(actual)
            .as("Verify Aula relevant properties")
            .satisfies(a -> assertThat(a.getData()).as("check data").usingComparator(zonedDataTimeSameInstant).isEqualTo(expected.getData())
            )
            .satisfies(a -> assertThat(a.getTitulo()).as("check titulo").isEqualTo(expected.getTitulo()))
            .satisfies(a -> assertThat(a.getConteudo()).as("check conteudo").isEqualTo(expected.getConteudo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAulaUpdatableRelationshipsEquals(Aula expected, Aula actual) {
        assertThat(actual)
            .as("Verify Aula relationships")
            .satisfies(a -> assertThat(a.getCurso()).as("check curso").isEqualTo(expected.getCurso()));
    }
}
